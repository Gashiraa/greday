.pdf
  %table.header
    %tr.company-infos
      %td
        = wicked_pdf_image_tag("logo_"+@company.short_name.downcase+".png")
        %br/
        = @company.name
        %br/
        = @company.street
        %br/
        = @company.postcode + ' ' + @company.locality
        %br/
        = @company.phone
        %br/
        = @company.email
        %br/
        = @company.vat
      %td.invoice-date
        = @company.locality + " le, " + l(@invoice.date).to_s
    %tr.second-row
      %td.invoice-number
        .ui.huge.header
          .invoice-header
            = t('invoice').upcase
          = '#' + @invoice.display_number.to_s
      %td.customer-infos
        = @invoice.customer.name
        %br/
        = @invoice.customer.street.to_s + ', ' + @invoice.customer.number.to_s
        %br/
        = @invoice.customer.cp.to_s + ' ' + @invoice.customer.locality
        %br/
        = @invoice.customer.country
        %br/
        = "TVA : " + @invoice.customer.tva_record
  .content
    - if @size > 15
      %h3 Récapitulatif de la facture
      %table.ui.unstackable.black.celled.striped.table
        %thead
          %tr
            %th.seven.wide= t('project')
            %th.three.wide.center.aligned= t('date_locale')
            %th.three.wide.right.aligned= t('total_vat')
            %th.three.wide.right.aligned= t('total_gross') + ' (€)'
        - if @invoice.projects.any?
          - @invoice.projects.order(date: :asc).each do |project|
            %tr
              %td= project.name
              %td.center.aligned= l(project.date)
              %td.right.aligned= number_with_precision project.total - project.total_gross, :precision => 2
              %td.right.aligned= number_with_precision project.total_gross, :precision => 2
      %table.ui.unstackable.compact.table.total-table
        %tr
          %th.thirteen.wide
          %th.three.wide
        %tr
          %td TOTAL HT (€)
          %td= number_with_precision @invoice.total_gross, :precision => 2
        %tr
          %td Total TVA (€)
          %td= number_with_precision (@invoice.total - @invoice.total_gross), :precision => 2
        %tr.ttc-total
          %td TOTAL TTC (€)
          %td= number_with_precision @invoice.total, :precision => 2
      .payment-notes.top-notes.avoidbreak
        %h4
          = t('invoice_account') + " BE47 0015 7715 0480"
          %br
          = "Communication à mentionner sur votre virement"
          \: #{@invoice.display_number.to_s + " - " + l(@invoice.date).to_s}
        %p
          = t('invoice_notice')
      .page-break
    - if @invoice.projects.any?
      - @invoice.projects.order(:id).each do |project|
        .avoidbreak
          %h3.project-header
            = (@company.short_name =="Greday" ? t('project') : t('quotation')) + " #" +project.id.to_s + " : " + project.name
          %p
            = project.description
            - if project.po.present?
              %br
              = t('PO') + " : "
              %b
                = project.po
            - if project.applicant.present?
              %br
              = t('applicant') + " : "
              %b
                = project.applicant
          - if project.services.any?
            .avoidbreak
              %h4
                = t('services').pluralize
              %table.ui.unstackable.black.celled.striped.table
                %thead
                  %tr
                    %th.six.wide= t('Name')
                    %th.one.wide.center.aligned= t('duration')
                    %th.three.wide.right.aligned= t('hourly_rate') + ' (€)'
                    %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
                    %th.three.wide.right.aligned= t('total_gross') + ' (€)'
                %tbody
                  - project.services.each do |service|
                    %tr
                      %td= service.name
                      %td.center.aligned= service.duration.strftime('%H:%M')
                      %td.right.aligned= number_with_precision service.hourly_rate, :precision => 2
                      %td.right.aligned= number_with_precision service.tva_rate, :precision => 2
                      %td.right.aligned= number_with_precision service.total_gross, :precision => 2
                %tfoot
                  %tr
                    %th.right.aligned{colspan: 4}
                      %b= "TOTAL"
                    %th.right.aligned
                      %b= number_with_precision project.services.collect { |p| p.valid? ? p.total_gross : 0 }.sum, :precision => 2
        - if project.wares.any?
          .avoidbreak
            %h4
              = t('wares').pluralize
            %table.ui.unstackable.black.celled.striped.table
              %thead
                %tr
                  %th.six.wide= t('ware_name')
                  %th.one.wide.center.aligned= t('quantity')
                  %th.three.wide.right.aligned= t('sell_price') + ' (€)'
                  %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
                  %th.three.wide.right.aligned= t('total_gross') + ' (€)'
              %tbody
                - project.wares.each do |ware|
                  %tr
                    %td= ware.ware_name
                    %td.center.aligned= number_with_precision(ware.quantity, strip_insignificant_zeros: true).to_s
                    %td.right.aligned= number_with_precision ware.sell_price, :precision => 2
                    %td.right.aligned= number_with_precision ware.tva_rate, :precision => 2
                    %td.right.aligned= number_with_precision ware.total_gross, :precision => 2
                  - if ware.show_desc_invoice
                    %tr
                      %td{colspan: "5"}
                        = simple_format(ware.comment)
              %tfoot
                %tr
                  %th.right.aligned{colspan: 4}
                    %b= "TOTAL"
                  %th.right.aligned
                    %b= number_with_precision project.wares.collect { |p| p.valid? ? p.total_gross : 0 }.sum, :precision => 2
        - if project.project_extra_lines.any?
          .avoidbreak
            %h4
              = @company.use_articles == false ? t('extra').pluralize : t('article').pluralize
            %table.ui.unstackable.black.celled.striped.table
              %thead
                %tr
                  %th.six.wide= t('Name')
                  %th.one.wide.center.aligned= t('quantity')
                  %th.three.wide.right.aligned= t('unit_price') + ' (€)'
                  %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
                  %th.three.wide.right.aligned= t('total_gross') + ' (€)'
              %tbody
                - project.project_extra_lines.order(:updated_at).each do |project_extra_line|
                  %tr
                  - if project_extra_line.is_manual
                    %td= project_extra_line.manual_name
                    %td.center.aligned= number_with_precision(project_extra_line.quantity, strip_insignificant_zeros: true).to_s + ' ' + project_extra_line.unit
                    %td.right.aligned= number_with_precision project_extra_line.manual_price, :precision => 2
                  - else
                    %td= project_extra_line.extra.name
                    %td.center.aligned= number_with_precision(project_extra_line.quantity, strip_insignificant_zeros: true).to_s + ' ' + project_extra_line.extra.unit
                    %td.right.aligned= number_with_precision project_extra_line.extra.unit_price, :precision => 2
                  %td.right.aligned= number_with_precision project_extra_line.tva_rate, :precision => 2
                  %td.right.aligned= number_with_precision project_extra_line.total_gross, :precision => 2
              %tfoot
                %tr
                  %th.right.aligned{colspan: 4}
                    %b= "TOTAL"
                  %th.right.aligned
                    %b= number_with_precision project.project_extra_lines.collect { |p| p.valid? ? p.total_gross : 0 }.sum, :precision => 2
        %br
        %b
          = project.comment
    - if @size <= 15 || @one_project
      - if @size >= 12
        .page-break
      %table.ui.unstackable.compact.table.total-table
        %tr
          %th.thirteen.wide
          %th.three.wide
        %tr
          %td TOTAL HT (€)
          %td= number_with_precision @invoice.total_gross, :precision => 2
        %tr
          %td Total TVA (€)
          %td= number_with_precision (@invoice.total - @invoice.total_gross), :precision => 2
        %tr.ttc-total
          %td TOTAL TTC (€)
          %td= number_with_precision @invoice.total, :precision => 2
      - if @company.short_name == "Greday"
        .payment-notes.bottom-notes.avoidbreak
          %h4
            = t('invoice_account') + " BE47 0015 7715 0480"
            %br
            = "Communication à mentionner sur votre virement"
            \: #{@invoice.display_number.to_s + " - " + l(@invoice.date).to_s}
          %p
            = t('invoice_notice')
    - if @company.short_name == "PLUSVIEW" || @company.short_name =="Philippe Doutrewé"
      = render "/layouts/pdf/tos"
.pdf
  %table.header
    %tr.company-infos
      %td
        = wicked_pdf_image_tag("logo_"+@company.short_name.downcase+".png")
        %br/
        = @company.name
        %br/
        = @company.street
        %br/
        = @company.postcode + ' ' + @company.locality
        %br/
        = @company.phone
        %br/
        = @company.email
        %br/
        = @company.vat
      %td.invoice-date
        = @company.locality + " le, " + l(@project.date).to_s
    %tr.second-row
      %td.invoice-number
        .ui.huge.header
          .quotation-header
            = t('quotation').upcase
          = '#' + @project.id.to_s
      %td.customer-infos
        = @project.customer.name
        %br/
        = @project.customer.street.to_s + ', ' + @project.customer.number.to_s
        %br/
        = @project.customer.cp.to_s + ' ' + @project.customer.locality
        %br/
        = @project.customer.country
        %br/
        = "TVA : " +  (@project.customer.tva_record.present? ? @project.customer.tva_record : "")
  .content
    .avoidbreak
      %h3
        Devis ##{@project.id} : #{@project.name}
      %p
        = @project.description
        - if @project.po.present?
          %br
          = t('PO') + " : "
          %b
            = @project.po
        - if @project.applicant.present?
          %br
            = t('applicant') + " : "
            %b
              = @project.applicant
      - if @project.services.any?
        .avoidbreak
          %h4
            = t('services').pluralize
          %table.ui.unstackable.black.celled.striped.table
            %thead
              %tr
                %th.six.wide= t('Name')
                %th.one.wide.center.aligned= t('duration')
                %th.three.wide.right.aligned= t('hourly_rate') + ' (€)'
                %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
                %th.three.wide.right.aligned= t('total_gross') + ' (€)'
            %tbody
              - @project.services.each do |service|
                %tr
                  %td= service.name
                  %td.center.aligned= service.duration.strftime('%H:%M')
                  %td.right.aligned= number_with_precision service.hourly_rate, :precision => 2
                  %td.right.aligned= number_with_precision service.tva_rate, :precision => 2
                  %td.right.aligned= number_with_precision service.total_gross, :precision => 2
            %tfoot
              %tr
                %th.right.aligned{colspan: 4}
                  %b= "TOTAL"
                %th.right.aligned
                  %b= (number_with_precision @project.services.sum(:total_gross), :precision => 2).to_s + "€"
    - if @project.wares.any?
      .avoidbreak
        %h4
          = t('wares').pluralize
        %table.ui.unstackable.black.celled.striped.table
          %thead
            %tr
              %th.six.wide= t('ware_name')
              %th.one.wide.center.aligned= t('quantity')
              %th.three.wide.right.aligned= t('sell_price') + ' (€)'
              %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
              %th.three.wide.right.aligned= t('total_gross') + ' (€)'
          %tbody
            - @project.wares.each do |ware|
              %tr
                %td= ware.ware_name
                %td.center.aligned= number_with_precision(ware.quantity, strip_insignificant_zeros: true).to_s
                %td.right.aligned= number_with_precision ware.sell_price, :precision => 2
                %td.right.aligned= number_with_precision ware.tva_rate, :precision => 2
                %td.right.aligned= number_with_precision ware.total_gross, :precision => 2
              - if ware.show_desc_quot
                %tr
                  %td{colspan: "5"}
                    = simple_format(ware.comment)
          %tfoot
            %tr
              %th.right.aligned{colspan: 4}
                %b= "TOTAL"
              %th.right.aligned
                %b= (number_with_precision @project.wares.sum(:total_gross), :precision => 2).to_s + "€"
    - if @project.project_extra_lines.any?
      %h4
        = @company.use_articles == false ? t('extra').pluralize : t('article').pluralize
      %table.ui.unstackable.black.celled.striped.table
        %thead
          %tr
            %th.six.wide= t('Name')
            %th.one.wide.center.aligned= t('quantity')
            %th.three.wide.right.aligned= t('unit_price') + ' (€)'
            %th.three.wide.right.aligned= t('tva_rate') + ' (%)'
            %th.three.wide.right.aligned= t('total_gross') + ' (€)'
        %tbody
          - @project.project_extra_lines.order(:updated_at).each do |project_extra_line|
            %tr
            - if project_extra_line.is_manual
              %td= project_extra_line.manual_name
              %td.center.aligned= number_with_precision(project_extra_line.quantity, strip_insignificant_zeros: true).to_s + ' ' + project_extra_line.unit
              %td.right.aligned= number_with_precision project_extra_line.manual_price, :precision => 2
            - else
              %td= project_extra_line.extra.name
              %td.center.aligned= number_with_precision(project_extra_line.quantity, strip_insignificant_zeros: true).to_s + ' ' + project_extra_line.extra.unit
              %td.right.aligned= number_with_precision project_extra_line.extra.unit_price, :precision => 2
            %td.right.aligned= number_with_precision project_extra_line.tva_rate, :precision => 2
            %td.right.aligned= number_with_precision project_extra_line.total_gross, :precision => 2
        %tfoot
          %tr
            %th.right.aligned{colspan: 4}
              %b= "TOTAL"
            %th.right.aligned
              %b= (number_with_precision @project.project_extra_lines.sum(:total_gross), :precision => 2).to_s + "€"
    %br
    %b
      = @project.comment
    %table.ui.unstackable.compact.table.total-table
      %tr
        %th.thirteen.wide
        %th.three.wide
      %tr
        %td TOTAL HT (€)
        %td= number_with_precision @project.total_gross, :precision => 2
      %tr
        %td Total TVA (€)
        %td= number_with_precision (@project.total - @project.total_gross), :precision => 2
      %tr.ttc-total
        %td TOTAL TTC (€)
        %td= number_with_precision @project.total, :precision => 2

